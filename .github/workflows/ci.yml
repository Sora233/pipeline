name: build

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Lint
        if: always()
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Test
        run: go test -coverprofile=coverage.txt -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annoations@v0.3.0
        with:
          test-results: test.json
    
      - name: Report coverage
        uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build
        run: go build -v ./...

  # docs:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out repository
  #     uses: actions/checkout@v2
  #   - name: Update readme according to Go doc
  #     uses: posener/goreadme
  #     with:
  #       email: 'marksalpeter@gmail.com'
  #       badge-codecov: true
  #       badge-godoc: true
  #       badge-github: "ci.yml" 
  #       badge-goreportcard: true
  #       badge-travisci: false
  #       commit-message: 'improvement(docs): updated docs'
  #       types: true
  #       functions: true
  #       github-token: '${{ secrets.GITHUB_TOKEN }}'

  version:
    # needs: docs
    if: github.ref == 'refs/heads/main' # only version on push to master
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Conventional Commits Versioning + Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          skip-version-file: true
          output-file: false
          skip-commit: true
      
      - name: Tag + Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}